{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhishek\\\\Data_Visualization_Dashboard-MERN-Stack\\\\src\\\\charts\\\\DoughnutChart.jsx\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoughnutChart = ({\n  serverData\n}) => {\n  let uniqueSectors = [];\n  //using forEach because it doesn't return any array\n  serverData.forEach(i => {\n    if (!uniqueSectors.includes(i.sector) && i.sector !== \"\") {\n      uniqueSectors.push(i.sector);\n    }\n  });\n  let uniqueTopics = [];\n  serverData.forEach(i => {\n    if (!uniqueTopics.includes(i.topic) && i.topic !== \"\") {\n      uniqueTopics.push(i.topic);\n    }\n  });\n  let uniqueRegion = [];\n  serverData.forEach(i => {\n    if (!uniqueRegion.includes(i.region) && i.region !== \"\") {\n      uniqueRegion.push(i.region);\n    }\n  });\n  let uniqueCountry = [];\n  serverData.forEach(i => {\n    if (!uniqueCountry.includes(i.country) && i.country !== \"\") {\n      uniqueCountry.push(i.country);\n    }\n  });\n  let uniqueSource = [];\n  serverData.forEach(i => {\n    if (!uniqueSource.includes(i.source) && i.source !== \"\") {\n      uniqueSource.push(i.source);\n    }\n  });\n  let uniquePestle = [];\n  serverData.forEach(i => {\n    if (!uniquePestle.includes(i.pestle) && i.pestle !== \"\") {\n      uniquePestle.push(i.pestle);\n    }\n  });\n  const label = [\"Country\", \"Region\", \"Source\", \"Topic\", \"Sector\", \"Pestle\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '50vh',\n      width: '45vw'\n    },\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: {\n        labels: label,\n        datasets: [{\n          label: \"Total: \",\n          data: [uniqueCountry.length, uniqueRegion.length, uniqueSource.length, uniqueTopics.length, uniqueSectors.length, uniquePestle.length],\n          borderWidth: 1,\n          hoverOffset: 5\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            type: 'linear',\n            beginAtZero: true\n          }\n        }\n      },\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","Doughnut","Chart","jsxDEV","_jsxDEV","DoughnutChart","serverData","uniqueSectors","forEach","i","includes","sector","push","uniqueTopics","topic","uniqueRegion","region","uniqueCountry","country","uniqueSource","source","uniquePestle","pestle","label","style","height","width","children","data","labels","datasets","length","borderWidth","hoverOffset","options","maintainAspectRatio","scales","y","type","beginAtZero","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Abhishek/Data_Visualization_Dashboard-MERN-Stack/src/charts/DoughnutChart.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst DoughnutChart = ({serverData}) => {\r\n\r\n    let uniqueSectors = [];\r\n    //using forEach because it doesn't return any array\r\n    serverData.forEach((i) => {\r\n        if (!uniqueSectors.includes(i.sector) && i.sector !== \"\") {\r\n            uniqueSectors.push(i.sector);\r\n        }\r\n    })\r\n\r\n    let uniqueTopics = [];\r\n    serverData.forEach((i) => {\r\n        if (!uniqueTopics.includes(i.topic) && i.topic !== \"\") {\r\n            uniqueTopics.push(i.topic);\r\n        }\r\n    })\r\n\r\n    let uniqueRegion = [];\r\n    serverData.forEach((i) => {\r\n        if (!uniqueRegion.includes(i.region) && i.region !== \"\") {\r\n            uniqueRegion.push(i.region);\r\n        }\r\n    })\r\n\r\n    let uniqueCountry = [];\r\n    serverData.forEach((i) => {\r\n        if (!uniqueCountry.includes(i.country) && i.country !== \"\") {\r\n            uniqueCountry.push(i.country);\r\n        }\r\n    })\r\n\r\n    let uniqueSource = [];\r\n    serverData.forEach((i) => {\r\n        if (!uniqueSource.includes(i.source) && i.source !== \"\") {\r\n            uniqueSource.push(i.source);\r\n        }\r\n    })\r\n\r\n    let uniquePestle = [];\r\n    serverData.forEach((i) => {\r\n        if (!uniquePestle.includes(i.pestle) && i.pestle !== \"\") {\r\n            uniquePestle.push(i.pestle);\r\n        }\r\n    })\r\n\r\n    const label = [\"Country\", \"Region\", \"Source\", \"Topic\", \"Sector\", \"Pestle\"];\r\n  return (\r\n    <div style={{ height:'50vh', width: '45vw'}}>\r\n            <Doughnut\r\n                data={{\r\n                    labels: label,\r\n                    datasets: [\r\n                        {\r\n                            label: \"Total: \",\r\n                            data: [uniqueCountry.length, uniqueRegion.length, uniqueSource.length, uniqueTopics.length, uniqueSectors.length, uniquePestle.length],\r\n                            borderWidth: 1,\r\n                            hoverOffset: 5\r\n                        },\r\n                        \r\n                    ]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        y: {\r\n                            type: 'linear',\r\n                            beginAtZero: true\r\n                        },\r\n                    }\r\n                }}\r\n                height={300}\r\n            />\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default DoughnutChart"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}